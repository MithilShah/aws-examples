Resources:
  notebookS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'ac${AWS::AccountId}-sagemaker-bucket'
  defaultRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties: 
      CodeRepositoryName: defaultRepo
      GitConfig:
        RepositoryUrl:  https://github.com/MithilShah/aws-examples
        SecretArn: arn:aws:secretsmanager:us-east-1:xxxxxxxx:secret:github-pXnnSg
  BasicNotebookInstanceLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      NotebookInstanceLifecycleConfigName: stopidle
      OnStart:
      - Content:
          Fn::Base64: |
            #!/bin/bash
            
            set -e
            
            # OVERVIEW
            # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
            # You can change the idle time for stop using the environment variable below.
            # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
            #
            # Note that this script will fail if either condition is not met
            #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
            #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook 
            #       and SageMaker:DescribeNotebookInstance to describe the notebook.
            #
            
            # PARAMETERS
            IDLE_TIME=3600
            
            echo "Fetching the autostop script"
            wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py
            
            echo "Starting the SageMaker autostop script in cron"
            
            (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -
  ExecutionRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      RoleName: "sagemaker-notebook-role"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
        - 
          Effect: "Allow"
          Principal: 
            Service: 
              - "sagemaker.amazonaws.com"
          Action: 
          - "sts:AssumeRole"
      Path: "/"
      Policies: 
        - 
          PolicyName: "sagemaker-notebook-policy"
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - Effect: "Allow"
                Action: 
                  - "cloudwatch:PutMetricData"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:CreateLogGroup"
                  - "logs:DescribeLogStreams"
                Resource: "*"
              - Effect: "Allow"
                Action: 
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                Resource: 
                - !GetAtt notebookS3Bucket.Arn
  sageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties: 
      AdditionalCodeRepositories: 
      - https://github.com/synthetichealth/synthea.git
      DefaultCodeRepository: !GetAtt defaultRepository.CodeRepositoryName
      DirectInternetAccess: Enabled
      InstanceType: ml.t3.medium
      NotebookInstanceName: sample-notebook
      RoleArn: !GetAtt ExecutionRole.Arn
      VolumeSizeInGB: 10
      LifecycleConfigName: !GetAtt BasicNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName